shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- data $>$ filter(injured=max(injured))
most.injuries <- data $>$ filter(injured==max(injured))
most.injuries <- data %>% filter(injured==max(injured))
View(most.injuries)
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- data %>% filter(injured==max(injured))
library(dplyr)
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- data %>% filter_(injured==max(injured))
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- data %>% filter(injured==max(injured))
library(dplyr)
library(knitr)
library(plotly)
# Basic information regarding the dataset on mass shootingin 2016
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- shootings.data %>% filter(injured==max(injured))
# Gets summary table of states' average injury, total number of deaths and frequency of shootings in 2016
summary.table <- shootings.data %>% group_by(state) %>% summarise(mean_injury = mean(injured), sum_death = sum(killed), freq_affected = n())
state_most_affected <- summary.table %>% filter(sum_death == max(sum_death))
state_most_freq <- summary.table %>% filter(freq_affected == max(freq_affected))
#Gets information regarding a particular incident
incident <- shootings.data %>% filter(killed==50)
#Creates an interactive map of 2016 US Mass Shooting Data
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
p <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
shootings.map <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
library(ggplot2)
?diamonds
View(diamonds)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, cut = state)) + facet_wrap(~ state)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
ggplotly(shootings.chart)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
library(dplyr)
library(knitr)
library(plotly)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
ggplotly(shootings.chart)
ggplot2(shootings.chart)
ggplot(shootings.chart)
shootings.chart <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
shootings.plot <- ggplot(data = shootings.data, aes(x = date, y = killed)) +
geom_point(aes(text = paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))) +
geom_smooth(aes(color = state, fill = state)) + facet_wrap(~ state)
plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))
shootings.plot
set.seed(385)
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))
shootings.plot
set.seed(385)
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed))
shootings.plot
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~impact_change, name = 'impact change', mode = 'lines+markers')
shootings.plot
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~trace_1, name = 'impact change', mode = 'lines+markers')
shootings.plot
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', mode = 'lines+markers')
shootings.plot
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', mode = 'lines+markers')
shootings.plot
shootings.data <- shootings.data[order(as.Date(shootings.data$date, format="%d/%m/%Y")),]
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
library(dplyr)
library(knitr)
library(plotly)
# Basic information regarding the dataset on mass shootingin 2016
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- shootings.data %>% filter(injured==max(injured))
# Gets summary table of states' average injury, total number of deaths and frequency of shootings in 2016
summary.table <- shootings.data %>% group_by(state) %>% summarise(mean_injury = mean(injured), sum_death = sum(killed), freq_affected = n())
state_most_affected <- summary.table %>% filter(sum_death == max(sum_death))
state_most_freq <- summary.table %>% filter(freq_affected == max(freq_affected))
# Gets information regarding a particular incident
incident <- shootings.data %>% filter(killed==50)
# Creates an interactive map of 2016 US Mass Shooting Data
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
shootings.map <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
# Creates an interactive plot of 2016 US Mass Shooting Data
shootings.data <- shootings.data[order(as.Date(shootings.data$date, format="%d/%m/%Y")),]
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
View(state_most_affected)
shootings.data <- shootings.data[order(as.Date(shootings.data$date, format="%d/%m/%Y")),]
shootings.data <- shootings.data[order(as.Date(shootings.data$date, format="%d/%m/%Y")),]
shootings.data[order(as.Date(shootings.data$date, format="%d/%m/%Y")),]
shootings.plot <- plot_ly(shootings.data, x = ~order(as.Date(date, format="%d/%m/%Y")), y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
shootings.data <- order(as.Date(shootings.data$date, format="%d/%m/%Y"))
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
shootings.data <- shootings.data %>% mutate(newDate = as.Date(date, format="%d/%m/%Y")) %>% arrange(-newDate)
shootings.data <- shootings.data %>% mutate(newDate = as.Date(date, format="%d/%m/%Y"))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(date)) #
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format="%d/%m/%Y")) #%>% arrange(-newDate)
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format="%d/%m/%Y"))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format="%d/%m/%Y"))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(mass.shooting.data$date, format = "%B %d, %Y"))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y"))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y")) %>% arrange(-newDate)
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y")) %>% arrange(newDate)
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y")) %>% arrange(newDate)
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
shootings.data$date <- factor(shootings.data$date, levels = unique(shootings.data$date)[order(shootings.data$newDate, decreasing = FALSE)])
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y")) %>% arrange(newDate)
shootings.plot <- plot_ly(shootings.data, x = ~date, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%m %d, %Y")) %>% arrange(newDate)
shootings.plot <- plot_ly(shootings.data, x = ~newDate, y = ~injured, color = ~killed, size = ~injured, text = ~paste(shootings.data$city, ", ", shootings.data$state, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)) %>% add_trace(y = ~injured, name = 'impact change', type = "scatter") %>% layout(title = "Impact of 2016 US Mass Shootings Overtime (Monthly)",
xaxis = list(title = 'Time (Months)',
zeroline = TRUE,
range = c(0, 200)),
yaxis = list(title = 'Impact (Injuries per incident)',
range = c(0, 60)))
shootings.data <- shootings.data %>% mutate(newDate = as.Date(shootings.data$date, format = "%B %d, %Y")) %>% arrange(newDate)
# Group Project
library(dplyr)
library(plotly)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
# Creates dataset of monthly visits
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 256) %>% mutate(Years = as.integer(1996 + ((row_number() - 1) / 12)))
colnames(usa.monthly) <- c("Months", "Total", "Years")
# Removes years from Months column
i <- 1
while(i < nrow(usa.monthly)) {
usa.monthly$Months[i] = "Jan．"
i = i + 12;
}
# Change value to match up with the rest from the same column
usa.monthly$Months[46] = "Oct．"
# Creates dataset of annual visits (1996 - 2016)
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
library(dplyr)
library(plotly)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
setwd("~/Desktop/INFO_201/Group-Project/Data")
setwd("..")
setwd("Charts")
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 256) %>% mutate(Years = as.integer(1996 + ((row_number() - 1) / 12)))
colnames(usa.monthly) <- c("Months", "Total", "Years")
i <- 1
while(i < nrow(usa.monthly)) {
usa.monthly$Months[i] = "Jan．"
i = i + 12;
}
usa.monthly$Months[46] = "Oct．"
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
View(usa.annual)
View(usa.monthly)
View(usa.data)
View(tourism.data)
View(usa.annual)
View(usa.monthly)
View(usa.data)
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
View(shootings.data)
shootings.map <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~long, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
getwd()
View(earthquake.data)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~long, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
shootings.map <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
g <- list(
scope = 'japan',
projection = list(type = 'albers japan'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~long, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
View(earthquake.data)
View(tourism.data)
View(usa.data)
View(usa.monthly)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
View(earthquake.data)
earthquake.data <- read.table("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
View(earthquake.data)
g <- list(
scope = 'japan',
projection = list(type = 'albers japan'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
g <- list(
scope = 'japan',
projection = list(type = 'albers japan'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
View(earthquake.data)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
g <- list(
scope = 'japan',
showframe = F,
showland = T,
landcolor = toRGB("grey90")
)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'JAPAN', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("black"),
countrycolor = toRGB("black")
)
shootings.map <- plot_geo(shootings.data, locationmode = 'USA-states', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, size = ~injured, color = ~killed, hoverinfo = "text",
text = ~paste(" ", shootings.data$city, ", ", shootings.data$state, "<br />", "Date: ", shootings.data$date, "<br />", "Injuries: ", shootings.data$injured, "<br />", "Deaths: ", shootings.data$killed)
) %>%
layout(title = '2016 US City Mass Shooting Data(Click legend to toggle)', geo = g)
library(maps)
library(ggplot2)
jp <- map_data("world",region=c("Japan"))
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(earthquake.data,aes(x=lng,y=lat,fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
#g <- g + coord_equal(ratio=1/2)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(jp.data,aes(x=lng,y=lat,fill=region))
g <- ggplot(jp.data,aes(x=lng,y=lat,fill=region))
g <- ggplot(jp,aes(x=lng,y=lat,fill=region))
g <- ggplot(earthquake.data,aes(x=lng,y=lat,fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
library(maps)
library(ggplot2)
jp <- map_data("world",region=c("Japan"))
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(earthquake.data,aes(x=lng, y=lat, group=region, fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
library(maps)
install.packages(maps)
install.packages("maps")
library(maps)
library(ggplot2)
jp <- map_data("world",region=c("Japan"))
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(earthquake.data,aes(x=lng, y=lat, group=region, fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
jp <- map_data("Japan")
jp <- map_data("japan")
jp <- map_data("jpn")
jp <- map_data("Jpn")
jp <- map_data("JPN")
jp <- map_data("world",region=c("Japan"))
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(earthquake.data,aes(x=lng, y=lat, group=region, fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
jp <- map_data("world",region=c("Japan"))
options <- par(mar=c(0,0,0,0),oma=c(0,0,0,0))
g <- ggplot(jp,aes(x=lng, y=lat, group=region, fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
g <- ggplot(jp,aes(x=long, y=lat, group=region, fill=region))
g <- g + geom_polygon(colour="black")
g <- g + labs(x=NULL,y=NULL)
g <- g + theme(axis.text.x=element_blank(),axis.text.y=element_blank())
g <- g + theme(plot.background=element_rect(fill="lightblue"))
g
# setting parameter about a map.
long <- c (120, 150)
lat <- c (25, 50)
# Reading data of earthquakes and map.
url <- "http://knowledgediscovery.jp/data/eq39.csv"
eq <- read.csv(url, as.is=T)
map <- data.frame(map(xlim = long, ylim = lat))
# creating image with ggplot.
p <- ggplot(eq, aes(long, lat))
p + geom_path(aes (x, y), map) +
geom_point(aes(size = Magnitude, colour = Magnitude), alpha = 1/2) +
xlim(long) +
ylim(lat)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
g <- list(
scope = 'japan',
showframe = F,
showland = T,
landcolor = toRGB("grey90")
)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'country names', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, locations = "Japan", size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
View(earthquake.data)
earthquake.data <- read.csv("../Data/earthquake_data.csv", stringsAsFactors=FALSE)
earthquake.map <- plot_geo(earthquake.data, locationmode = 'country names', sizes = c(1, 384)) %>%
add_markers(
x = ~lng, y = ~lat, locations = ~country, size = ~injuries, color = ~deaths, hoverinfo = "text",
text = ~paste(" ", earthquake.data$region, "<br />", "Date: ", earthquake.data$date, "<br />", "Injuries: ", earthquake.data$injuries, "<br />", "Deaths: ", earthquake.data$deaths)
) %>%
layout(title = '1995 and 2011 Major Japanese Earthquakes Data', geo = g)
earthquake.map
