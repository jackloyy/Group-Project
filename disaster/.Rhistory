dist.path <- "districts/locate/"
dist.uri <- paste(base.uri, dist.path, sep="")
zip.code <- "98105";
query.params <- list(zip=zip.code)
dist.response <- GET(dist.uri, query=query.params)
dist.body <- content(dist.response, "text")
dist.info <- fromJSON(dist.body)
state <- dist.info$results$state
district <- dist.info$results$district
legis.path <- "legislators/locate"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis.info <- fromJSON(legis.body)
fromJSON(legis.body)
legis <- fromJSON(legis.body)
legis <- flatten(legis)
legis <- flatten(legis$page)
legis <- flatten(legis$page)
legis$page
legis$page
legis$page$per_page
legis$page$per_page
legis.path <- "legislators"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis$page$per_page
fromJSON(legis.body)
legis.path <- "legislators/locate"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
fromJSON(legis.body)
legis&results
query.params <- list(zip=98105)
legis.path <- "legislators/locate"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis&results
query.params <- list(zip=zip.code)
legis.path <- "legislators/locate"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis&results
legis$results
print(legis$results)
legis$results
fromJSON(legis.body)
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis$results
fromJSON(legis.body)
legis$page
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
library(jsonlite)
library(httr)
base.uri <- "https://congress.api.sunlightfoundation.com/"
dist.path <- "districts/locate/"
dist.uri <- paste(base.uri, dist.path, sep="")
zip.code <- "98105";
query.params <- list(zip=zip.code)
dist.response <- GET(dist.uri, query=query.params)
dist.body <- content(dist.response, "text")
dist.info <- fromJSON(dist.body)
state <- dist.info$results$state
district <- dist.info$results$district
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
fromJSON(legis.body)
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=list(zip="11364"))
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis$page
fromJSON(legis.body)
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis$page
GetCommit <- function(id) {
commit.path <- "committees/"
commit.uri <- paste(base.uri, commit.path, sep="")
commit.params <- list(member_ids=id)
commit.response <- GET(commit.uri, query=commit.params)
commit.body <- content(commit.response, "text")
commit <- fromJSON(commit.body)
return (commit$results)
}
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit))
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
base.uri <- "https://congress.api.sunlightfoundation.com/"
dist.path <- "districts/locate/"
dist.uri <- paste(base.uri, dist.path, sep="")
zip.code <- "98105";
query.params <- list(zip=zip.code)
dist.response <- GET(dist.uri, query=query.params)
dist.body <- content(dist.response, "text")
dist.info <- fromJSON(dist.body)
state <- dist.info$results$state
district <- dist.info$results$district
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis.flattened <- flatten(legis$result)
legis.flattened <- legis.flattened %>% mutate(Website = paste0("[link](", website, ")"), Twitter = paste0("[link](https://twitter.com/", twitter_id, ")"))
legis.info <- legis.flattened %>% select(c(first_name, last_name, title, party, chamber, phone, Website, Twitter))
colnames(legis.info) <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
GetCommit <- function(id) {
commit.path <- "committees/"
commit.uri <- paste(base.uri, commit.path, sep="")
commit.params <- list(member_ids=id)
commit.response <- GET(commit.uri, query=commit.params)
commit.body <- content(commit.response, "text")
commit <- fromJSON(commit.body)
return (commit$results)
}
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit))
View(commit.list)
commi.members <- legis.flattened %>% mutate(name = first_name + " " + last_name) %>% select(name, bioguide_id)
commi.members <- legis.flattened %>% mutate(name = paste(first_name, last_name)) %>% select(name, bioguide_id)
View(commit.list)
View(commi.members)
GetCommit <- function(id) {
commit.path <- "committees/"
commit.uri <- paste(base.uri, commit.path, sep="")
commit.params <- list(member_ids=id)
commit.response <- GET(commit.uri, query=commit.params)
commit.body <- content(commit.response, "text")
commit <- fromJSON(commit.body)
return (commit$results %>% mutate(bioguide_id = id))
}
commi.members <- legis.flattened %>% mutate(name = paste(first_name, last_name)) %>% select(name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit))
View(commit.list)
commit.list <- left_join(commit.list, commit.members, by = bioguide_id)
commit.list <- left_join(commit.list, commit.members, by = "bioguide_id")
commit.members <- legis.flattened %>% mutate(name = paste(first_name, last_name)) %>% select(name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit))
View(commit.list)
commit.list <- left_join(commit.list, commit.members, by = "bioguide_id")
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(name, bioguide_id)
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit))
View(commit.list)
commit.list <- left_join(commit.list, commit.members, by = "bioguide_id")
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id")
View(commit.list)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit.name) %>% summarise(num_commit = nrow(name))
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit_name) %>% summarise(num_commit = nrow(name))
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit_name)
View(commit.list)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit_name) %>% summarise(num_cmmit = n())
View(commit.list)
barplot(table(commit.list), main="Committees Served on by Each Rep.", horiz=TRUE)
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, names.arg=commit.list$commit_name)
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE)
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit_name) %>% summarise(num_commit = n())
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE)
barplot(table(commit.list$commit_name), main="Committees Served on by Each Rep.", horiz=TRUE)
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, names.arg=commit.list$commit_name)
par(las=2)
par(mar=commit.list$num_commit)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(table(commit.list), main="Committees Served on by Each Rep.", horiz=TRUE, names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(table(commit.list), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 15), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(table(commit.list), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(table(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
View(table(commit.liset$num_commit))
View(table(commit.list$num_commit))
table(mtcars$gear)
table(commit.list)
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") #%>% group_by(commit_name) %>% summarise(num_commit = n())
barplot(table(commit.list), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id") %>% group_by(commit_name) %>% summarise(num_commit = n())
View(commit.list)
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
table(commit.list)
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=reorder(commit.list$commit_name, -commit.list$num_commit))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=reorder(commit.list$commit_name, commit.list$num_commit))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(commit.list$num_commit, main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=reorder(commit.list$commit_name, -commit.list$num_commit))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(sor(commit.list$num_commit, decreasing=TRUE), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=reorder(commit.list$commit_name, -commit.list$num_commit))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(sort(commit.list$num_commit, decreasing=TRUE), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=reorder(commit.list$commit_name, -commit.list$num_commit))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(sort(commit.list$num_commit, decreasing=TRUE), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=commit.list$commit_name)
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), names.arg=rev(commit.list$commit_name))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(commit.list$commit_name))
`r par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(commit.list$commit_name))`
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
library(jsonlite)
install.packages("XQuartz")
install.packages("XQuartz")
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
install.packages("XQuartz", repo="xquartz.macosforge.org")
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
install.packages("XQuartz", repo="https://xquartz.macosforge.org")
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
install.packages("XQuartz", repo="http://cran.us.r-project.org")
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
install.packages("XQuartz")
par(las=2)
par(mar=c(5, 8, 4, 2))
boxplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(commit.list$commit_name))
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(commit.list$commit_name))
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id")
members.list <- commit.list %>% group_by(commit_name) %>% summarise(num_commit = n())
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(commit.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(commit.list$commit_name))
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id")
members.list <- commit.list %>% group_by(commit_name) %>% summarise(num_commit = n())
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(members.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(members.list$commit_name))
committee <- commit.list %>% filter(subcommittee=FALSE)
committee <- commit.list %>% filter(subcommittee==FALSE)
View(commi.members)
View(commit.list)
View(committee)
committee <- commit.list %>% filter(subcommittee==FALSE) %>% slice(1)
committee.body <- fromJSON(content(committee.response,"text"))$results$members[[1]] %>% flatten()
committee <- commit.list %>% filter(subcommittee==FALSE) %>% slice(1)
committee.path <- "committees/"
committee.uri <- paste(base.uri, committee.path, sep="")
committee.params <- list(committee_id=committee$committee_id, fields="members")
committee.response <- GET(committee.uri, query=committee.params)
committee.body <- fromJSON(content(committee.response,"text"))$results$members[[1]] %>% flatten()
View(commi.members)
View(commit.list)
View(committee)
View(committee.body)
chair <- committee.body %>% filter(title=="chair")
chair.first <- chair$legislator.first_name
chair.last <- chair$legislator.last_name
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
base.uri <- "https://congress.api.sunlightfoundation.com/"
dist.path <- "districts/locate/"
dist.uri <- paste(base.uri, dist.path, sep="")
zip.code <- "98105";
query.params <- list(zip=zip.code)
dist.response <- GET(dist.uri, query=query.params)
dist.body <- content(dist.response, "text")
dist.info <- fromJSON(dist.body)
state <- dist.info$results$state
district <- dist.info$results$district
legis.path <- "legislators/locate/"
legis.uri <- paste(base.uri, legis.path, sep="")
legis.response <- GET(legis.uri, query=query.params)
legis.body <- content(legis.response, "text")
legis <- fromJSON(legis.body)
legis.flattened <- flatten(legis$result)
legis.flattened <- legis.flattened %>% mutate(Website = paste0("[link](", website, ")"), Twitter = paste0("[link](https://twitter.com/", twitter_id, ")"))
legis.info <- legis.flattened %>% select(c(first_name, last_name, title, party, chamber, phone, Website, Twitter))
colnames(legis.info) <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
GetCommit <- function(id) {
commit.path <- "committees/"
commit.uri <- paste(base.uri, commit.path, sep="")
commit.params <- list(member_ids=id)
commit.response <- GET(commit.uri, query=commit.params)
commit.body <- content(commit.response, "text")
commit <- fromJSON(commit.body)
return (commit$results %>% mutate(bioguide_id = id))
}
commit.members <- legis.flattened %>% mutate(commit_name = paste(first_name, last_name)) %>% select(commit_name, bioguide_id)
commit.list <- bind_rows(lapply(legis.flattened$bioguide_id, GetCommit)) %>% left_join(commit.members, by = "bioguide_id")
members.list <- commit.list %>% group_by(commit_name) %>% summarise(num_commit = n())
par(las=2)
par(mar=c(5, 8, 4, 2))
barplot(rev(members.list$num_commit), main="Committees Served on by Each Rep.", horiz=TRUE, xlim=c(0, 16), xlab="# Committees", names.arg=rev(members.list$commit_name))
committee <- commit.list %>% filter(subcommittee==FALSE) %>% slice(1)
committee.path <- "committees/"
committee.uri <- paste(base.uri, committee.path, sep="")
committee.params <- list(committee_id=committee$committee_id, fields="members")
committee.response <- GET(committee.uri, query=committee.params)
committee.body <- fromJSON(content(committee.response,"text"))$results$members[[1]] %>% flatten()
chair <- committee.body %>% filter(title=="chair")
chair.first <- chair$legislator.first_name
chair.last <- chair$legislator.last_name
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
library(dplyr)
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- shootings.data %>% filter(injured==max(injured))
View(mtcars)
aggregate(mtcars, by=list(cyl, vs))
aggregate(mtcars, by=list(cyl, vs), FUN=mean)
aggregate(mtcars, by=list(cyl, vs), FUN=mean, na.rm=TRUE)
attach(mtcars)
aggregate(mtcars, by=list(cyl, vs), FUN=mean, na.rm=TRUE)
attach(mtcars)
test <- aggregate(mtcars, by=list(cyl, vs), FUN=mean, na.rm=TRUE)
View(test)
summary(mtcars)
summary(mtcars$cyl)
View(shootings.data)
summary(shootings.data$city)
View(mtcars)
incident <- shootings.data %>% filter(city=="Orlando")
View(incident)
incident <- shootings.data %>% filter(killed==50)
View(incident)
View(incident)
library(dplyr)
# Basic information regarding the dataset on mass shootingin 2016
shootings.data <- read.csv("data/shootings-2016.csv", stringsAsFactors=FALSE)
num.shootings <- nrow(shootings.data)
lives.lost <- sum(shootings.data$killed)
most.affected <- shootings.data %>% filter(killed > 5)
most.affected.cities <- most.affected$city
most.affected.lost <- most.affected$killed
most.injuries <- shootings.data %>% filter(injured==max(injured))
incident <- shootings.data %>% filter(killed==50)
aggregate(city ~ injured + killed, data=shootings.data, FUN=range)
print(aggregate(city ~ injured + killed, data=shootings.data, FUN=range))
summary.by.city <- aggregate(city ~ injured + killed, data=shootings.data, FUN=range)
View(summary.by.city)
summary.by.city <- aggregate(injured ~ killed, data=shootings.data, FUN=range)
summary.by.city <- aggregate(city ~ injured + killed, data=shootings.data, FUN=range)
summary.by.city <- aggregate(shootings.data, by=list(injured, killed), data=shootings.data, FUN=range)
attach(shootings.data)
summary.by.city <- aggregate(shootings.data, by=list(injured, killed), data=shootings.data, FUN=range)
summary.by.city <- aggregate(injured ~ killed + city, data=shootings.data, FUN=range)
summary.by.city <- aggregate(injured ~ killed + city, data=shootings.data, FUN=mean)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
View(aggdata)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
detach(mtcars)
View(mtcars)
summary.by.city <- aggregate(shootings.data, by=list(injured, killed), data=shootings.data, FUN=mean)
attach(shootings.data)
summary.by.city <- aggregate(shootings.data, by=list(injured, killed), data=shootings.data, FUN=mean)
attach(shootings.data)
summary.by.city <- aggregate(shootings.data, by=list(injured, killed), FUN=mean)
length(iris)
??iris
View(iris)
dim(iris)
colnames(iris)
rownames(iris)
data_info(iris)
data_info <- function(dataset) {
info <- list()
info$length <- length(dataset)
info$col <- colnames(dataset)
info$nrow <- nrow(dataset)
return (info)
}
data_info(iris)
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
# Creates dataset of monthly visits
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 256) %>% mutate(Years = as.integer(1996 + ((row_number() - 1) / 12)))
colnames(usa.monthly) <- c("Months", "Total", "Years")
# Removes years from Months column
i <- 1
while(i < nrow(usa.monthly)) {
usa.monthly$Months[i] = "Jan．"
i = i + 12;
}
# Change value to match up with the rest from the same column
usa.monthly$Months[46] = "Oct．"
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
tourism.data <- read.csv('../data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('./Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('./Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
g
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
currency <- read.csv('../Data/currency_rates.csv', stringsAsFactors=FALSE);
currency <- read.csv('../Data/currency_rates.csv', stringsAsFactors=FALSE);
currency <- read.csv('../Data/currency_rates.csv', stringsAsFactors=FALSE);
income <- read.csv('../Data/income.csv', stringsAsFactors=FALSE);
library(dplyr)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
library(dplyr)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
library(dplyr)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
source('~/Desktop/INFO_201/Group-Project/Charts/Financ_Annual_Chart.R', echo=TRUE)
library(dplyr)
tourism.data <- read.csv('../Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
usa.data <- tourism.data %>% select(X, X.11)
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 256) %>% mutate(Years = as.integer(1996 + ((row_number() - 1) / 12)))
colnames(usa.monthly) <- c("Months", "Total", "Years")
i <- 1
while(i < nrow(usa.monthly)) {
usa.monthly$Months[i] = "Jan．"
i = i + 12;
}
usa.monthly$Months[46] = "Oct．"
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
currency <- read.csv('../Data/currency_rates.csv', stringsAsFactors=FALSE);
income <- read.csv('../Data/income.csv', stringsAsFactors=FALSE);
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
tourism.data <- read.csv('Data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
shiny::runApp('Desktop/INFO_201/Group-Project/disaster')
runApp('Desktop/INFO_201/Group-Project/disaster')
runApp('Desktop/INFO_201/Group-Project/disaster')
runApp('Desktop/INFO_201/Group-Project/disaster')
runApp('Desktop/INFO_201/Group-Project/disaster')
