shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
tourism.data <- read.csv('JTM_inbound20170421eng.csv')
setwd("~/Desktop/info201/Group-Project")
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
View(tourism.data)
usa.data <- tourism.data %>% select(X, X.11)
# Group Project
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
View(usa.data)
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 259)
View(usa.monthly)
# Group Project
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
# create dataset of monthly visit
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 259)
#creat dataset of annual visit
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
View(usa.annual)
# Group Project
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
# create dataset of monthly visit
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 259)
colnames(usa.monthly) <- c("Months", "Total")
#creat dataset of annual visit
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
library(plotly)
# Group Project
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv')
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
#creat dataset of annual visit
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
View(usa.annual)
usa.annual.graph <- function(data.annual) {
x <- c(1990:2016)
y <- rnorm(data.annual$Total, mean = 70000)
data <- data.frame(x, y)
p <- plot_ly(data, x = ~x, y = ~y, type = 'scatter', mode = 'lines')
p
}
usa.annual.graph(usa.annual)
# Displays a chart given a dataset of monthly data and a year
usa.month.chart <- function(data.month, year) {
monthly.data <- data.month %>% filter(Years == year)
# Stores and chops off the commas in the numbers
total <- as.numeric(gsub(",", "", monthly.data$Total));
# Stores and arranges the months in chronological order
months <- factor(monthly.data$Months, levels = c("Jan．", "Feb．", "Mar．", "Apr．", "May．", "Jun．", "Jul．", "Aug．", "Sep．", "Oct．", "Nov．", "Dec．"))
# Display chart based on visits per month
monthly.chart <- plot_ly(monthly.data, x = ~months, y = ~total, type = 'scatter', mode = 'lines') %>% layout(title = paste("Monthly Visits from US in", year))
return (monthly.chart)
}
# Displays a chart given a dataset of monthly data and a year
usa.month.chart <- function(data.month, year) {
monthly.data <- data.month %>% filter(Years == year)
# Stores and chops off the commas in the numbers
total <- as.numeric(gsub(",", "", monthly.data$Total));
# Stores and arranges the months in chronological order
months <- factor(monthly.data$Months, levels = c("Jan．", "Feb．", "Mar．", "Apr．", "May．", "Jun．", "Jul．", "Aug．", "Sep．", "Oct．", "Nov．", "Dec．"))
# Display chart based on visits per month
monthly.chart <- plot_ly(monthly.data, x = ~months, y = ~total, type = 'scatter', mode = 'lines') %>% layout(title = paste("Monthly Visits from US in", year))
return (monthly.chart)
}
usa.month.chart(3,1999)
usa.month.chart(Jan., 1999)
View(usa.monthly)
# Group Project
library(dplyr)
tourism.data <- read.csv('data/JTM_inbound20170421eng.csv', stringsAsFactors=FALSE)
# Select date(X) and country columns(X.11)
usa.data <- tourism.data %>% select(X, X.11)
# Creates dataset of monthly visits
usa.monthly <- usa.data %>% filter(row_number() >= 5, row_number() <= 256) %>% mutate(Years = as.integer(1996 + ((row_number() - 1) / 12)))
colnames(usa.monthly) <- c("Months", "Total", "Years")
# Removes years from Months column
i <- 1
while(i < nrow(usa.monthly)) {
usa.monthly$Months[i] = "Jan．"
i = i + 12;
}
# Change value to match up with the rest from the same column
usa.monthly$Months[46] = "Oct．"
# Creates dataset of annual visits (1996 - 2016)
usa.annual <- usa.data %>% filter(row_number() >= 266, row_number() <= 292)
colnames(usa.annual) <- c("Years", "Total")
View(usa.monthly)
usa.month.chart("Mar.", 2001)
View(usa.annual)
